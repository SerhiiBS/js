{"version":3,"file":"main.js","mappings":";UAAA;UACA;;;;;WCDA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;ACNA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnDA","sources":["webpack://hw21/webpack/bootstrap","webpack://hw21/webpack/runtime/make namespace object","webpack://hw21/./src/index.js","webpack://hw21/./src/index.scss?a5de"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","class FormElement {\n    constructor(name, type, value) {\n\n        this.name = name;\n        this.type = type;\n        this.value = value;\n        this.input = document.createElement(this.name);\n        this.form = document.querySelector('.js--create-form');\n    }\n    showName() {\n        console.log(`Name: ${this.name}`);\n    }\n    getValue() {\n        return this.value;\n    }\n}\n\nclass TextElement extends FormElement {\n    create() {\n        this.form.append( this.input);\n        this.input.setAttribute('type', this.type);\n        if (this.value !== undefined) {\n            this.input.setAttribute('placeholder', this.value);\n        }\n    }\n}\nclass CheckboxElement extends FormElement {\n    create() {\n        this.form.append(this.input);\n        this.input.setAttribute('type', this.type);\n        this.input.insertAdjacentHTML('afterend', `<label class=\"text\">I agree all</label>`);\n        if (this.value == 'checked') {\n            this.input.setAttribute(this.value, 'true');\n        }\n    }\n}\nclass ButtonElement extends FormElement {\n    create () {\n        this.form.append(this.input)\n        this.input.innerHTML = this.value;\n    }\n}\nconst name = new TextElement('input', 'text', 'Your name');\nconst email = new TextElement('input', 'email', 'Your email');\nconst password = new TextElement('input', 'password', 'Your password');\nconst checkBox = new CheckboxElement('input', 'checkbox', '')\nconst button = new ButtonElement('button', 'button','Send');\nname.create();\nemail.create();\npassword.create();\ncheckBox.create();\nbutton.create();\n\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}